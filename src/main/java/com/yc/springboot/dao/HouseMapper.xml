<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yc.springboot.dao.HouseMapper">
  <resultMap id="BaseResultMap" type="com.yc.springboot.bean.House">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="pubdate" jdbcType="DATE" property="pubdate" />
    <result column="floorage" jdbcType="INTEGER" property="floorage" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="street_id" jdbcType="INTEGER" property="streetId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yc.springboot.bean.House">
    <result column="descrripton" jdbcType="LONGVARCHAR" property="descrripton" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, type_id, title, price, pubdate, floorage, contact, street_id
  </sql>
  <sql id="Blob_Column_List">
    descrripton
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yc.springboot.bean.HouseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yc.springboot.bean.HouseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from house
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from house
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yc.springboot.bean.HouseExample">
    delete from house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yc.springboot.bean.House">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into house (user_id, type_id, title, 
      price, pubdate, floorage, 
      contact, street_id, descrripton
      )
    values (#{userId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{pubdate,jdbcType=DATE}, #{floorage,jdbcType=INTEGER}, 
      #{contact,jdbcType=VARCHAR}, #{streetId,jdbcType=INTEGER}, #{descrripton,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yc.springboot.bean.House">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into house
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="pubdate != null">
        pubdate,
      </if>
      <if test="floorage != null">
        floorage,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="streetId != null">
        street_id,
      </if>
      <if test="descrripton != null">
        descrripton,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="pubdate != null">
        #{pubdate,jdbcType=DATE},
      </if>
      <if test="floorage != null">
        #{floorage,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="streetId != null">
        #{streetId,jdbcType=INTEGER},
      </if>
      <if test="descrripton != null">
        #{descrripton,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yc.springboot.bean.HouseExample" resultType="java.lang.Long">
    select count(*) from house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update house
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.pubdate != null">
        pubdate = #{record.pubdate,jdbcType=DATE},
      </if>
      <if test="record.floorage != null">
        floorage = #{record.floorage,jdbcType=INTEGER},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.streetId != null">
        street_id = #{record.streetId,jdbcType=INTEGER},
      </if>
      <if test="record.descrripton != null">
        descrripton = #{record.descrripton,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update house
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      pubdate = #{record.pubdate,jdbcType=DATE},
      floorage = #{record.floorage,jdbcType=INTEGER},
      contact = #{record.contact,jdbcType=VARCHAR},
      street_id = #{record.streetId,jdbcType=INTEGER},
      descrripton = #{record.descrripton,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update house
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      pubdate = #{record.pubdate,jdbcType=DATE},
      floorage = #{record.floorage,jdbcType=INTEGER},
      contact = #{record.contact,jdbcType=VARCHAR},
      street_id = #{record.streetId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yc.springboot.bean.House">
    update house
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="pubdate != null">
        pubdate = #{pubdate,jdbcType=DATE},
      </if>
      <if test="floorage != null">
        floorage = #{floorage,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="streetId != null">
        street_id = #{streetId,jdbcType=INTEGER},
      </if>
      <if test="descrripton != null">
        descrripton = #{descrripton,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yc.springboot.bean.House">
    update house
    set user_id = #{userId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      pubdate = #{pubdate,jdbcType=DATE},
      floorage = #{floorage,jdbcType=INTEGER},
      contact = #{contact,jdbcType=VARCHAR},
      street_id = #{streetId,jdbcType=INTEGER},
      descrripton = #{descrripton,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yc.springboot.bean.House">
    update house
    set user_id = #{userId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      pubdate = #{pubdate,jdbcType=DATE},
      floorage = #{floorage,jdbcType=INTEGER},
      contact = #{contact,jdbcType=VARCHAR},
      street_id = #{streetId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>